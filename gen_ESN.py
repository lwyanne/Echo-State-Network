"""
generate echo state network
"""
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import scipy
import scipy.linalg
import scipy.sparse
import scipy.sparse.linalg
from mpl_toolkits.mplot3d import Axes3D
from function import *


# if u is generated by Lorenz system
u=gen_Lorenz(len=10000) 
u=downsample(u)    
u[0]=normal(u[0])
u[1]=normal(u[1])
u[2]=normal(u[2])   
x,V,W=activationReservoir2c(u,seednum=30,resSize=1000,c=0.95)



timelength=np.shape(x)[1]
plotState(x,5,timelength)
# fig = plt.figure()
# ax = fig.add_subplot(211, projection='3d')
# a=np.linspace(0,200,200)
# b=np.linspace(0,20,100)
# a,b=np.meshgrid(a,b)
# ax.plot_wireframe(a,b,x,rstride=1,cstride=0)

# if u are contant zeros
u=np.zeros((3,200))
x,V,W=activationReservoir2c(u,seednum=30,resSize=1000,c=0.95)
# fig2=plt.figure()
# plt.imshow(W,cmap='gray')
timelength=np.shape(x)[1]
plotState(x,5,timelength)


# 
a1=np.zeros(30)
a2=np.ones(30)
a3=-10*np.ones(300)
u=np.append(np.append(a1,a2),a3)
u=normal(u)   #如果不正则化，就会是一整条直线   TODO:
print(u)
print(np.shape(u))
x,V,W=activationReservoir2c(u,seednum=30,resSize=1000,c=0.95)
timelength=np.shape(x)[-1]
plotState(x,10,timelength)
plt.show()



